{"ast":null,"code":"import _objectSpread from \"/Users/enari/Desktop/learn react/QuizzicalApp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/enari/Desktop/learn react/QuizzicalApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/enari/Desktop/learn react/QuizzicalApp/src/App.js\";\nimport React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { nanoid } from \"nanoid\";\nimport Question from \"./components/Question\"; //1.先写css，\n//2.引入api，引入data。\n//3.问题，答案，正确答案，用户选择，表格提交？\n//4.题目数量，答对数量\n\nArray.prototype.insert = function (index, item) {\n  return this.splice(index, 0, item);\n};\n\nexport default function App() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      questions = _React$useState2[0],\n      setQuestion = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isGameEnd = _React$useState4[0],\n      setIsGameEnd = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      correctCount = _React$useState6[0],\n      setCorrectCount = _React$useState6[1]; //initialize questions\n\n\n  React.useEffect(function () {\n    fetch(\"https://opentdb.com/api.php?amount=5\").then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      var questionList = data.results.map(function (result) {\n        result.incorrect_answers.insert(Math.ceil(Math.random() * result.incorrect_answers.length), result.correct_answer);\n        return _objectSpread({}, result, {\n          id: nanoid(),\n          selectedAnswer: \"\",\n          showAnswer: false\n        });\n      });\n      setQuestion(questionList);\n    });\n  }, []); //\n\n  function selectAnswer(selectedAnswer, id) {\n    setQuestion(function (preQuestions) {\n      return preQuestions.map(function (question) {\n        console.log(selectedAnswer + \" is Clicked\");\n        return question.id === id ? _objectSpread({}, question, {\n          selectedAnswer: selectedAnswer\n        }) : _objectSpread({}, question);\n      });\n    });\n  } //\n\n\n  function checkAnswers() {\n    if (questions.every(function (question) {\n      return question.selectedAnswer !== \"\";\n    })) {\n      setIsGameEnd(true);\n      questions.map(function (question) {\n        if (question.correct_answer === question.selectedAnswer) setCorrectCount(function (pre) {\n          return pre + 1;\n        });\n      });\n    } // setIsGameEnd(true);\n\n  }\n\n  console.log(correctCount); // console.log(questions);\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Question, {\n    questions: questions,\n    selectAnswer: selectAnswer,\n    isGameEnd: isGameEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), !isGameEnd ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"check--answer\",\n    onClick: checkAnswers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"check answers\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"check--answer\",\n    onClick: checkAnswers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"play again\")));\n}","map":{"version":3,"names":["React","ReactDom","nanoid","Question","Array","prototype","insert","index","item","splice","App","useState","questions","setQuestion","isGameEnd","setIsGameEnd","correctCount","setCorrectCount","useEffect","fetch","then","res","json","data","questionList","results","map","result","incorrect_answers","Math","ceil","random","length","correct_answer","id","selectedAnswer","showAnswer","selectAnswer","preQuestions","question","console","log","checkAnswers","every","pre"],"sources":["/Users/enari/Desktop/learn react/QuizzicalApp/src/App.js"],"sourcesContent":["import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { nanoid } from \"nanoid\";\nimport Question from \"./components/Question\";\n\n//1.先写css，\n//2.引入api，引入data。\n//3.问题，答案，正确答案，用户选择，表格提交？\n//4.题目数量，答对数量\n\nArray.prototype.insert = function(index, item) {\n  return this.splice(index, 0, item);\n};\n\nexport default function App() {\n  const [questions, setQuestion] = React.useState([]);\n  const [isGameEnd, setIsGameEnd] = React.useState(false);\n  const [correctCount, setCorrectCount] = React.useState(0);\n\n  //initialize questions\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5\")\n      .then((res) => res.json())\n      .then((data) => {\n        const questionList = data.results.map((result) => {\n          result.incorrect_answers.insert(\n            Math.ceil(Math.random() * result.incorrect_answers.length),\n            result.correct_answer\n          );\n\n          return {\n            ...result,\n            id: nanoid(),\n            selectedAnswer: \"\",\n            showAnswer: false,\n          };\n        });\n        setQuestion(questionList);\n      });\n  }, []);\n\n  //\n  function selectAnswer(selectedAnswer, id) {\n    setQuestion((preQuestions) =>\n      preQuestions.map((question) => {\n        console.log(selectedAnswer + \" is Clicked\");\n        return question.id === id\n          ? { ...question, selectedAnswer: selectedAnswer }\n          : { ...question };\n      })\n    );\n  }\n\n  //\n  function checkAnswers() {\n    if (questions.every((question) => question.selectedAnswer !== \"\")) {\n      setIsGameEnd(true);\n      questions.map((question) => {\n        if (question.correct_answer === question.selectedAnswer)\n          setCorrectCount((pre) => pre + 1);\n      });\n    }\n    // setIsGameEnd(true);\n  }\n  console.log(correctCount);\n  // console.log(questions);\n\n  return (\n    <main>\n      {/* <div className=\"container\">\n        <div>\n          <h3>Quizzical</h3>\n          <p>Some description if needed</p>\n        </div>\n        <button className=\"start--button\">Start Quiz</button>\n      </div> */}\n\n      <Question\n        questions={questions}\n        selectAnswer={selectAnswer}\n        isGameEnd={isGameEnd}\n      />\n      {!isGameEnd ? (\n        <button className=\"check--answer\" onClick={checkAnswers}>\n          check answers\n        </button>\n      ) : (\n        <div>\n          {\" \"}\n          <button className=\"check--answer\" onClick={checkAnswers}>\n            play again\n          </button>\n        </div>\n      )}\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}