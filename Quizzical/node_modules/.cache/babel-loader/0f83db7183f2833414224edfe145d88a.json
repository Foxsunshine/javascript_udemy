{"ast":null,"code":"import _objectSpread from \"/Users/enari/Desktop/learn react/QuizzicalApp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/enari/Desktop/learn react/QuizzicalApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/enari/Desktop/learn react/QuizzicalApp/src/App.js\";\nimport React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { nanoid } from \"nanoid\";\nimport Question from \"./components/Question\"; //1.先写css，\n//2.引入api，引入data。\n//3.问题，答案，正确答案，用户选择，表格提交？\n//4.题目数量，答对数量\n\nArray.prototype.insert = function (index, item) {\n  return this.splice(index, 0, item);\n};\n\nexport default function App() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      questions = _React$useState2[0],\n      setQuestion = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isGameEnd = _React$useState4[0],\n      setIsGameEnd = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      correctCount = _React$useState6[0],\n      setCorrectCount = _React$useState6[1]; //initialize questions\n\n\n  React.useEffect(function () {\n    fetch(\"https://opentdb.com/api.php?amount=5\").then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      var questionList = data.results.map(function (result) {\n        return _objectSpread({}, result, {\n          id: nanoid(),\n          selectedAnswer: \"\",\n          showAnswer: false\n        });\n      });\n      setQuestion(questionList);\n    });\n  }, []); //\n\n  function selectAnswer(selectedAnswer, id) {\n    setQuestion(function (preQuestions) {\n      return preQuestions.map(function (question) {\n        return question.id === id ? _objectSpread({}, question, {\n          selectedAnswer: selectedAnswer\n        }) : _objectSpread({}, question);\n      });\n    });\n  }\n\n  console.log(questions);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Question, {\n    questions: questions,\n    selectAnswer: selectAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"check--answer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"check answers\"));\n}","map":{"version":3,"names":["React","ReactDom","nanoid","Question","Array","prototype","insert","index","item","splice","App","useState","questions","setQuestion","isGameEnd","setIsGameEnd","correctCount","setCorrectCount","useEffect","fetch","then","res","json","data","questionList","results","map","result","id","selectedAnswer","showAnswer","selectAnswer","preQuestions","question","console","log"],"sources":["/Users/enari/Desktop/learn react/QuizzicalApp/src/App.js"],"sourcesContent":["import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { nanoid } from \"nanoid\";\nimport Question from \"./components/Question\";\n\n//1.先写css，\n//2.引入api，引入data。\n//3.问题，答案，正确答案，用户选择，表格提交？\n//4.题目数量，答对数量\n\nArray.prototype.insert = function(index, item) {\n  return this.splice(index, 0, item);\n};\n\nexport default function App() {\n  const [questions, setQuestion] = React.useState([]);\n  const [isGameEnd, setIsGameEnd] = React.useState(false);\n  const [correctCount, setCorrectCount] = React.useState(0);\n\n  //initialize questions\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5\")\n      .then((res) => res.json())\n      .then((data) => {\n        const questionList = data.results.map((result) => ({\n          ...result,\n          id: nanoid(),\n          selectedAnswer: \"\",\n          showAnswer: false,\n        }));\n        setQuestion(questionList);\n      });\n  }, []);\n\n  //\n  function selectAnswer(selectedAnswer, id) {\n    setQuestion((preQuestions) =>\n      preQuestions.map((question) => {\n        return question.id === id\n          ? { ...question, selectedAnswer: selectedAnswer }\n          : { ...question };\n      })\n    );\n  }\n\n  console.log(questions);\n\n  return (\n    <main>\n      {/* <div className=\"container\">\n        <div>\n          <h3>Quizzical</h3>\n          <p>Some description if needed</p>\n        </div>\n        <button className=\"start--button\">Start Quiz</button>\n      </div> */}\n      <Question questions={questions} selectAnswer={selectAnswer} />\n      <button className=\"check--answer\">check answers</button>\n    </main>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CAEA;AACA;AACA;AACA;;AAEAC,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAyB,UAASC,KAAT,EAAgBC,IAAhB,EAAsB;EAC7C,OAAO,KAAKC,MAAL,CAAYF,KAAZ,EAAmB,CAAnB,EAAsBC,IAAtB,CAAP;AACD,CAFD;;AAIA,eAAe,SAASE,GAAT,GAAe;EAAA,sBACKV,KAAK,CAACW,QAAN,CAAe,EAAf,CADL;EAAA;EAAA,IACrBC,SADqB;EAAA,IACVC,WADU;;EAAA,uBAEMb,KAAK,CAACW,QAAN,CAAe,KAAf,CAFN;EAAA;EAAA,IAErBG,SAFqB;EAAA,IAEVC,YAFU;;EAAA,uBAGYf,KAAK,CAACW,QAAN,CAAe,CAAf,CAHZ;EAAA;EAAA,IAGrBK,YAHqB;EAAA,IAGPC,eAHO,wBAK5B;;;EACAjB,KAAK,CAACkB,SAAN,CAAgB,YAAM;IACpBC,KAAK,CAAC,sCAAD,CAAL,CACGC,IADH,CACQ,UAACC,GAAD;MAAA,OAASA,GAAG,CAACC,IAAJ,EAAT;IAAA,CADR,EAEGF,IAFH,CAEQ,UAACG,IAAD,EAAU;MACd,IAAMC,YAAY,GAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiB,UAACC,MAAD;QAAA,yBACjCA,MADiC;UAEpCC,EAAE,EAAE1B,MAAM,EAF0B;UAGpC2B,cAAc,EAAE,EAHoB;UAIpCC,UAAU,EAAE;QAJwB;MAAA,CAAjB,CAArB;MAMAjB,WAAW,CAACW,YAAD,CAAX;IACD,CAVH;EAWD,CAZD,EAYG,EAZH,EAN4B,CAoB5B;;EACA,SAASO,YAAT,CAAsBF,cAAtB,EAAsCD,EAAtC,EAA0C;IACxCf,WAAW,CAAC,UAACmB,YAAD;MAAA,OACVA,YAAY,CAACN,GAAb,CAAiB,UAACO,QAAD,EAAc;QAC7B,OAAOA,QAAQ,CAACL,EAAT,KAAgBA,EAAhB,qBACEK,QADF;UACYJ,cAAc,EAAEA;QAD5B,uBAEEI,QAFF,CAAP;MAGD,CAJD,CADU;IAAA,CAAD,CAAX;EAOD;;EAEDC,OAAO,CAACC,GAAR,CAAYvB,SAAZ;EAEA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAQE,oBAAC,QAAD;IAAU,SAAS,EAAEA,SAArB;IAAgC,YAAY,EAAEmB,YAA9C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EARF,eASE;IAAQ,SAAS,EAAC,eAAlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBATF,CADF;AAaD"},"metadata":{},"sourceType":"module"}