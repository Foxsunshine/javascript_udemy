{"ast":null,"code":"import _readOnlyError from \"/Users/enari/Desktop/learn react/QuizzicalApp/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"/Users/enari/Desktop/learn react/QuizzicalApp/src/components/Question.js\";\nimport React from \"react\";\nimport { decode } from \"html-entities\";\nimport ReactDOM from \"react-dom\";\nimport { random } from \"nanoid\";\n\nArray.prototype.insert = function (index, item) {\n  return this.splice(index, 0, item);\n};\n\nexport default function Question(props) {\n  var _this = this;\n\n  //render question list.\n  var element = props.questions.map(function (question) {\n    // console.log(question);\n    var elementAnswer = question.incorrect_answers.map(function (answer) {\n      console.log(question.selectedAnswer);\n      var styles = {};\n      if (question.selectedAnswer === answer) ({\n        backgroundColor: \"red\",\n        border: \"none\"\n      }), _readOnlyError(\"styles\");else \"\", _readOnlyError(\"styles\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"answer\",\n        onClick: function onClick() {\n          return props.selectAnswer(answer, question.id);\n        },\n        style: styles,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, decode(answer));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container--question\",\n      key: question.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"question\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, decode(question.question)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container--answer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, elementAnswer), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }\n  }, element);\n}","map":{"version":3,"names":["React","decode","ReactDOM","random","Array","prototype","insert","index","item","splice","Question","props","element","questions","map","question","elementAnswer","incorrect_answers","answer","console","log","selectedAnswer","styles","backgroundColor","border","selectAnswer","id"],"sources":["/Users/enari/Desktop/learn react/QuizzicalApp/src/components/Question.js"],"sourcesContent":["import React from \"react\";\nimport { decode } from \"html-entities\";\nimport ReactDOM from \"react-dom\";\nimport { random } from \"nanoid\";\n\nArray.prototype.insert = function(index, item) {\n  return this.splice(index, 0, item);\n};\n\nexport default function Question(props) {\n  //render question list.\n  const element = props.questions.map((question) => {\n    // console.log(question);\n    const elementAnswer = question.incorrect_answers.map((answer) => {\n      console.log(question.selectedAnswer);\n      const styles = {};\n      if (question.selectedAnswer === answer)\n        styles = {\n          backgroundColor: \"red\",\n          border: \"none\",\n        };\n      else styles = \"\";\n      return (\n        <div\n          className=\"answer\"\n          onClick={() => props.selectAnswer(answer, question.id)}\n          style={styles}\n        >\n          {decode(answer)}\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"container--question\" key={question.id}>\n        <h1 className=\"question\">{decode(question.question)}</h1>\n        <div className=\"container--answer\">{elementAnswer}</div>\n        <hr></hr>\n      </div>\n    );\n  });\n  return <div>{element}</div>;\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEAC,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAyB,UAASC,KAAT,EAAgBC,IAAhB,EAAsB;EAC7C,OAAO,KAAKC,MAAL,CAAYF,KAAZ,EAAmB,CAAnB,EAAsBC,IAAtB,CAAP;AACD,CAFD;;AAIA,eAAe,SAASE,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACtC;EACA,IAAMC,OAAO,GAAGD,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoB,UAACC,QAAD,EAAc;IAChD;IACA,IAAMC,aAAa,GAAGD,QAAQ,CAACE,iBAAT,CAA2BH,GAA3B,CAA+B,UAACI,MAAD,EAAY;MAC/DC,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,cAArB;MACA,IAAMC,MAAM,GAAG,EAAf;MACA,IAAIP,QAAQ,CAACM,cAAT,KAA4BH,MAAhC,EACE,CAAS;QACPK,eAAe,EAAE,KADV;QAEPC,MAAM,EAAE;MAFD,CAAT,4BADF,KAKc,EAAT;MACL,oBACE;QACE,SAAS,EAAC,QADZ;QAEE,OAAO,EAAE;UAAA,OAAMb,KAAK,CAACc,YAAN,CAAmBP,MAAnB,EAA2BH,QAAQ,CAACW,EAApC,CAAN;QAAA,CAFX;QAGE,KAAK,EAAEJ,MAHT;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAKGrB,MAAM,CAACiB,MAAD,CALT,CADF;IASD,CAlBqB,CAAtB;IAoBA,oBACE;MAAK,SAAS,EAAC,qBAAf;MAAqC,GAAG,EAAEH,QAAQ,CAACW,EAAnD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAI,SAAS,EAAC,UAAd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAA0BzB,MAAM,CAACc,QAAQ,CAACA,QAAV,CAAhC,CADF,eAEE;MAAK,SAAS,EAAC,mBAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAoCC,aAApC,CAFF,eAGE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAHF,CADF;EAOD,CA7Be,CAAhB;EA8BA,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAMJ,OAAN,CAAP;AACD"},"metadata":{},"sourceType":"module"}