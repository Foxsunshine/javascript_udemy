{"ast":null,"code":"var _jsxFileName = \"/Users/enari/Desktop/learn react/QuizzicalApp/src/components/Question.js\";\nimport React from \"react\";\nimport { decode } from \"html-entities\";\nimport ReactDOM from \"react-dom\";\nimport { random } from \"nanoid\";\n\nArray.prototype.insert = function (index, item) {\n  this.splice(index, 0, item);\n};\n\nexport default function Question(props) {\n  var _this = this;\n\n  var element = props.questions.map(function (question) {\n    console.log(question);\n    var randomIndex = Math.ceil(Math.random() * question.incorrect_answers.length);\n    console.log(question.incorrect_answers.insert(randomIndex, question.correct_answer)); // question.incorrect_answers.map();\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: question.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"question\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, decode(question.question)));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  }, element);\n}","map":{"version":3,"names":["React","decode","ReactDOM","random","Array","prototype","insert","index","item","splice","Question","props","element","questions","map","question","console","log","randomIndex","Math","ceil","incorrect_answers","length","correct_answer","id"],"sources":["/Users/enari/Desktop/learn react/QuizzicalApp/src/components/Question.js"],"sourcesContent":["import React from \"react\";\nimport { decode } from \"html-entities\";\nimport ReactDOM from \"react-dom\";\nimport { random } from \"nanoid\";\n\nArray.prototype.insert = function(index, item) {\n  this.splice(index, 0, item);\n};\n\nexport default function Question(props) {\n  const element = props.questions.map((question) => {\n    console.log(question);\n    const randomIndex = Math.ceil(\n      Math.random() * question.incorrect_answers.length\n    );\n    console.log(\n      question.incorrect_answers.insert(randomIndex, question.correct_answer)\n    );\n    // question.incorrect_answers.map();\n\n    return (\n      <div key={question.id}>\n        <h1 className=\"question\">{decode(question.question)}</h1>\n      </div>\n    );\n  });\n  return <div>{element}</div>;\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEAC,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAyB,UAASC,KAAT,EAAgBC,IAAhB,EAAsB;EAC7C,KAAKC,MAAL,CAAYF,KAAZ,EAAmB,CAAnB,EAAsBC,IAAtB;AACD,CAFD;;AAIA,eAAe,SAASE,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACtC,IAAMC,OAAO,GAAGD,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoB,UAACC,QAAD,EAAc;IAChDC,OAAO,CAACC,GAAR,CAAYF,QAAZ;IACA,IAAMG,WAAW,GAAGC,IAAI,CAACC,IAAL,CAClBD,IAAI,CAAChB,MAAL,KAAgBY,QAAQ,CAACM,iBAAT,CAA2BC,MADzB,CAApB;IAGAN,OAAO,CAACC,GAAR,CACEF,QAAQ,CAACM,iBAAT,CAA2Bf,MAA3B,CAAkCY,WAAlC,EAA+CH,QAAQ,CAACQ,cAAxD,CADF,EALgD,CAQhD;;IAEA,oBACE;MAAK,GAAG,EAAER,QAAQ,CAACS,EAAnB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAI,SAAS,EAAC,UAAd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAA0BvB,MAAM,CAACc,QAAQ,CAACA,QAAV,CAAhC,CADF,CADF;EAKD,CAfe,CAAhB;EAgBA,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAMH,OAAN,CAAP;AACD"},"metadata":{},"sourceType":"module"}