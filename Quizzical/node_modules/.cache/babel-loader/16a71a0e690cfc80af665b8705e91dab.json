{"ast":null,"code":"import _objectSpread from \"/Users/enari/Desktop/learn react/QuizzicalApp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/enari/Desktop/learn react/QuizzicalApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/enari/Desktop/learn react/QuizzicalApp/src/App.js\";\nimport React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { nanoid } from \"nanoid\";\nimport Question from \"./components/Question\"; //1.先写css，\n//2.引入api，引入data。\n//3.问题，答案，正确答案，用户选择，表格提交？\n//4.题目数量，答对数量\n\nArray.prototype.insert = function (index, item) {\n  return this.splice(index, 0, item);\n};\n\nexport default function App() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      gameStart = _React$useState2[0],\n      setGamestart = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      questions = _React$useState4[0],\n      setQuestion = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isGameEnd = _React$useState6[0],\n      setIsGameEnd = _React$useState6[1];\n\n  var _React$useState7 = React.useState(0),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      correctCount = _React$useState8[0],\n      setCorrectCount = _React$useState8[1]; //initialize questions\n  // function initializeQuestions() {}\n\n\n  React.useEffect(function () {\n    fetch(\"https://opentdb.com/api.php?amount=5\").then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      var questionList = data.results.map(function (result) {\n        result.incorrect_answers.insert(Math.ceil(Math.random() * result.incorrect_answers.length), result.correct_answer);\n        return _objectSpread({}, result, {\n          id: nanoid(),\n          selectedAnswer: \"\" // showAnswer: false,\n\n        });\n      });\n      setQuestion(questionList);\n    });\n  }, []); //\n\n  function selectAnswer(selectedAnswer, id) {\n    setQuestion(function (preQuestions) {\n      return preQuestions.map(function (question) {\n        console.log(selectedAnswer + \" is Clicked\");\n        return question.id === id ? _objectSpread({}, question, {\n          selectedAnswer: selectedAnswer\n        }) : _objectSpread({}, question);\n      });\n    });\n  } //\n\n\n  function checkAnswers() {\n    if (questions.every(function (question) {\n      return question.selectedAnswer !== \"\";\n    })) {\n      setIsGameEnd(true);\n      questions.map(function (question) {\n        if (question.correct_answer === question.selectedAnswer) setCorrectCount(function (pre) {\n          return pre + 1;\n        });\n      });\n    } // setIsGameEnd(true);\n\n  } // console.log(correctCount);\n  // console.log(questions);\n\n\n  function playAgain() {\n    fetch(\"https://opentdb.com/api.php?amount=5\").then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      var questionList = data.results.map(function (result) {\n        result.incorrect_answers.insert(Math.ceil(Math.random() * result.incorrect_answers.length), result.correct_answer);\n        return _objectSpread({}, result, {\n          id: nanoid(),\n          selectedAnswer: \"\" // showAnswer: false,\n\n        });\n      });\n      setQuestion(questionList);\n    });\n    setGamestart(false);\n    setCorrectCount(0);\n    setIsGameEnd(false);\n  }\n\n  function handleStart() {\n    setGamestart(true);\n  } // const QuestionMenu = ()\n\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, !gameStart ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Quizzical\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Some description if needed\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start--button\",\n    onClick: handleStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Start Quiz\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Question, {\n    questions: questions,\n    selectAnswer: selectAnswer,\n    isGameEnd: isGameEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), !isGameEnd ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"check--answer\",\n    onClick: checkAnswers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"check answers\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"You scored \".concat(correctCount, \"/\").concat(questions.length, \" correct \").concat(correctCount === 1 ? \"answer\" : \"answers\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"play--again\",\n    onClick: playAgain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"play again\"))));\n}","map":{"version":3,"names":["React","ReactDom","nanoid","Question","Array","prototype","insert","index","item","splice","App","useState","gameStart","setGamestart","questions","setQuestion","isGameEnd","setIsGameEnd","correctCount","setCorrectCount","useEffect","fetch","then","res","json","data","questionList","results","map","result","incorrect_answers","Math","ceil","random","length","correct_answer","id","selectedAnswer","selectAnswer","preQuestions","question","console","log","checkAnswers","every","pre","playAgain","handleStart"],"sources":["/Users/enari/Desktop/learn react/QuizzicalApp/src/App.js"],"sourcesContent":["import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { nanoid } from \"nanoid\";\nimport Question from \"./components/Question\";\n\n//1.先写css，\n//2.引入api，引入data。\n//3.问题，答案，正确答案，用户选择，表格提交？\n//4.题目数量，答对数量\n\nArray.prototype.insert = function(index, item) {\n  return this.splice(index, 0, item);\n};\n\nexport default function App() {\n  const [gameStart, setGamestart] = React.useState(false);\n  const [questions, setQuestion] = React.useState([]);\n  const [isGameEnd, setIsGameEnd] = React.useState(false);\n  const [correctCount, setCorrectCount] = React.useState(0);\n\n  //initialize questions\n\n  // function initializeQuestions() {}\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5\")\n      .then((res) => res.json())\n      .then((data) => {\n        const questionList = data.results.map((result) => {\n          result.incorrect_answers.insert(\n            Math.ceil(Math.random() * result.incorrect_answers.length),\n            result.correct_answer\n          );\n\n          return {\n            ...result,\n            id: nanoid(),\n            selectedAnswer: \"\",\n            // showAnswer: false,\n          };\n        });\n        setQuestion(questionList);\n      });\n  }, []);\n\n  //\n  function selectAnswer(selectedAnswer, id) {\n    setQuestion((preQuestions) =>\n      preQuestions.map((question) => {\n        console.log(selectedAnswer + \" is Clicked\");\n        return question.id === id\n          ? { ...question, selectedAnswer: selectedAnswer }\n          : { ...question };\n      })\n    );\n  }\n\n  //\n  function checkAnswers() {\n    if (questions.every((question) => question.selectedAnswer !== \"\")) {\n      setIsGameEnd(true);\n      questions.map((question) => {\n        if (question.correct_answer === question.selectedAnswer)\n          setCorrectCount((pre) => pre + 1);\n      });\n    }\n    // setIsGameEnd(true);\n  }\n  // console.log(correctCount);\n  // console.log(questions);\n\n  function playAgain() {\n    fetch(\"https://opentdb.com/api.php?amount=5\")\n      .then((res) => res.json())\n      .then((data) => {\n        const questionList = data.results.map((result) => {\n          result.incorrect_answers.insert(\n            Math.ceil(Math.random() * result.incorrect_answers.length),\n            result.correct_answer\n          );\n\n          return {\n            ...result,\n            id: nanoid(),\n            selectedAnswer: \"\",\n            // showAnswer: false,\n          };\n        });\n        setQuestion(questionList);\n      });\n    setGamestart(false);\n    setCorrectCount(0);\n    setIsGameEnd(false);\n  }\n\n  function handleStart() {\n    setGamestart(true);\n  }\n\n  // const QuestionMenu = ()\n  return (\n    <main>\n      {!gameStart ? (\n        <div className=\"container\">\n          <div>\n            <h3>Quizzical</h3>\n            <p>Some description if needed</p>\n          </div>\n          <button className=\"start--button\" onClick={handleStart}>\n            Start Quiz\n          </button>\n        </div>\n      ) : (\n        <div>\n          <Question\n            questions={questions}\n            selectAnswer={selectAnswer}\n            isGameEnd={isGameEnd}\n          />\n          {!isGameEnd ? (\n            <button className=\"check--answer\" onClick={checkAnswers}>\n              check answers\n            </button>\n          ) : (\n            <div className=\"container-result\">\n              <h4>{`You scored ${correctCount}/${questions.length} correct ${\n                correctCount === 1 ? \"answer\" : \"answers\"\n              }`}</h4>\n              <button className=\"play--again\" onClick={playAgain}>\n                play again\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}