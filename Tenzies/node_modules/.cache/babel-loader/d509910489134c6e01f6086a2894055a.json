{"ast":null,"code":"var _jsxFileName = \"/Users/enari/Desktop/learn react/Tenzies/src/App.js\";\nimport React from \"react\";\nimport ReactDom from \"react-dom\";\nimport Die from \"./components/Die\";\n/**\n * Challenge:\n *\n * - Create a Die component that takes a `value` prop\n * - Render 10 instances of the Die component (manually)\n *      - Provide a number between 1-6 for the value on each\n *        for now\n * - Style the <main> and <Die> components\n *   to look like they do in the slide\n *      - Hints: Create a container to hold the 10 instances\n *        of the Die component, and use CSS Grid to lay them\n *        out evenly in 2 rows of 5 columns\n *      - Use flexbox on main to center the dice container\n *        in the center of the page\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tenzies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Die, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDom","Die","App"],"sources":["/Users/enari/Desktop/learn react/Tenzies/src/App.js"],"sourcesContent":["import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport Die from \"./components/Die\";\n\n/**\n * Challenge:\n *\n * - Create a Die component that takes a `value` prop\n * - Render 10 instances of the Die component (manually)\n *      - Provide a number between 1-6 for the value on each\n *        for now\n * - Style the <main> and <Die> components\n *   to look like they do in the slide\n *      - Hints: Create a container to hold the 10 instances\n *        of the Die component, and use CSS Grid to lay them\n *        out evenly in 2 rows of 5 columns\n *      - Use flexbox on main to center the dice container\n *        in the center of the page\n */\n\nexport default function App() {\n  return (\n    <main>\n      <div>\n        <h3>Tenzies</h3>\n        <p>\n          Roll until all dice are the same. Click each die to freeze it at its\n          current value between rolls.\n        </p>\n      </div>\n      <div>\n        <Die />\n      </div>\n    </main>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAC5B,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAA,uBACE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;KAfuBA,G"},"metadata":{},"sourceType":"module"}