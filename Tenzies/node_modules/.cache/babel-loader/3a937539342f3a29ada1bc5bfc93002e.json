{"ast":null,"code":"var _jsxFileName = \"/Users/enari/Desktop/learn react/Tenzies/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDom from \"react-dom\";\nimport Die from \"./components/Die\";\n/**\n * Challenge:\n *\n * Create state to hold our array of numbers. (Initialize\n * the state by calling our `allNewDice` function so it\n * loads all new dice as soon as the app loads)\n *\n * Map over the state numbers array to generate our array\n * of Die elements and render those in place of our\n * manually-written 10 Die elements.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [die, setDie] = React.useState(allNewDice());\n\n  function allNewDice() {\n    let arr = [];\n\n    for (let i = 0; i < 6; i++) {\n      arr[i] = Math.floor(Math.random() * 6) + 1;\n    }\n\n    return arr;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tenzies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Die, {\n          die: die\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Roll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nfMIJPY+8E3vQas23JDtZWbGExc=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDom","Die","App","die","setDie","useState","allNewDice","arr","i","Math","floor","random"],"sources":["/Users/enari/Desktop/learn react/Tenzies/src/App.js"],"sourcesContent":["import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport Die from \"./components/Die\";\n\n/**\n * Challenge:\n *\n * Create state to hold our array of numbers. (Initialize\n * the state by calling our `allNewDice` function so it\n * loads all new dice as soon as the app loads)\n *\n * Map over the state numbers array to generate our array\n * of Die elements and render those in place of our\n * manually-written 10 Die elements.\n */\n\nexport default function App() {\n  const [die, setDie] = React.useState(allNewDice());\n  function allNewDice() {\n    let arr = [];\n    for (let i = 0; i < 6; i++) {\n      arr[i] = Math.floor(Math.random() * 6) + 1;\n    }\n    return arr;\n  }\n\n  return (\n    <main>\n      <div className=\"box\">\n        <div>\n          <h3>Tenzies</h3>\n          <p>\n            Roll until all dice are the same. Click each die to freeze it at its\n            current value between rolls.\n          </p>\n        </div>\n        <div>\n          <Die die={die} />\n        </div>\n        <button>Roll</button>\n      </div>\n    </main>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,KAAK,CAACM,QAAN,CAAeC,UAAU,EAAzB,CAAtB;;EACA,SAASA,UAAT,GAAsB;IACpB,IAAIC,GAAG,GAAG,EAAV;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;MAC1BD,GAAG,CAACC,CAAD,CAAH,GAASC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAAzC;IACD;;IACD,OAAOJ,GAAP;EACD;;EAED,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QAAA,uBACE,QAAC,GAAD;UAAK,GAAG,EAAEJ;QAAV;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QARF,eAWE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GA3BuBD,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}